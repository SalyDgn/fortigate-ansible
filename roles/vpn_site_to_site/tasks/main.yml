---
# tasks file for vpn_site_to_site
- name: Include vars
  include_vars: varsA.yml
  when: inventory_hostname == "fortigate-A"
- name: Include vars
  include_vars: varsB.yml
  when: inventory_hostname == "fortigate-B"

- name: VPN PHASE1
  tags: vpn1
  fortios_vpn_ipsec_phase1_interface:
    vdom: "{{ item.value.vdom }}"
    state: "present"
    vpn_ipsec_phase1_interface:
      name: "P1vpn-to-{{item.value.subnets.site_remote}}"
      interface: "port1"
      peertype: "any"
      proposal: "{{item.value.proposal}}"
      dpd_retryinterval: "5"
      dhgrp: "{{item.value.dh}}"
      psksecret: "{{item.value.pskey}}"
      remote_gw: "{{item.value.peerIP}}"
  with_dict: "{{vpn}}"
  register: result

- set_fact: hostname="{{vpn.site.host}}"
    vdom="{{vpn.site.vdom}}"
    proposal="{{vpn.site.proposal}}"
    phase2keylifetime="{{vpn.site.phase2keylifetime}}"
    site_local_name="{{vpn.site.subnets.site_local}}"
    site_remote_name="{{vpn.site.subnets.site_remote}}"
    sas="{{vpn.site.subnets.sas}}"
  tags: route,vpn_status

- name: VPN PHASE2
  tags: vpn1
  fortios_vpn_ipsec_phase2_interface:
    vdom: "{{ vdom }}"
    state: "present"
    vpn_ipsec_phase2_interface:
      name: "P2vpn-to-{{site_remote_name}}-{{item.name}}"
      phase1name: "P1vpn-to-{{site_remote_name}}"
      proposal: "{{ proposal }}"
      replay: "enable"
      pfs: "enable"
      auto_negotiate: "enable"
      keylifeseconds: "{{phase2keylifetime }}"
      src_subnet: "{{item.local}}"
      dst_subnet: "{{item.remote}}"
  with_items: "{{sas}}"

- name: firewall address local
  tags: firewall_addr
  fortios_firewall_address:
    vdom: "{{ vdom }}"
    state: "present"
    firewall_address:
      name: "{{site_local_name}}-{{item.name}}"
      subnet: "{{item.local}}"
  with_items: "{{sas}}"

- name: firewall address remote
  tags: firewall_addr
  fortios_firewall_address:
    vdom: "{{ vdom }}"
    state: "present"
    firewall_address:
      name: "{{site_remote_name}}-{{item.name}}"
      subnet: "{{item.remote}}"
  with_items: "{{sas}}"

- name: firewall policy outbound
  tags: firewall_out
  fortios_firewall_policy:
    vdom: "{{ vdom }}"
    state: "present"
    firewall_policy:
      policyid: "0"
      srcintf:
        - name: "port2"
      dstintf:
        - name: "P1vpn-to-{{site_remote_name}}"
      dstaddr:
        - name: "{{site_remote_name}}-{{item.name}}"
      srcaddr:
        - name: "{{site_local_name}}-{{item.name}}"
      schedule: "always"
      action: "accept"
      service:
        - name: "PING"
        - name: "SSH"
  with_items: "{{sas}}"

- name: firewall policy inbound
  tags: firewall_in
  fortios_firewall_policy:
    vdom: "{{ vdom }}"
    state: "present"
    firewall_policy:
      policyid: "0"
      srcintf:
        - name: "P1vpn-to-{{site_remote_name}}"
      dstintf:
        - name: "port2"
      dstaddr:
        - name: "{{site_local_name}}-{{item.name}}"
      srcaddr:
        - name: "{{site_remote_name}}-{{item.name}}"
      schedule: "always"
      action: "accept"
      service:
        - name: "PING"
        - name: "SSH"
  with_items: "{{sas}}"

- name: route through vpn tunnel
  tags: route
  ignore_errors: true
  fortios_router_static:
    vdom: "{{ vdom }}"
    state: "present"
    router_static:
      dst: "{{item.remote}}"
      device: "P1vpn-to-{{site_remote_name}}"
      seq_num: "0"
  with_items: "{{sas}}"
