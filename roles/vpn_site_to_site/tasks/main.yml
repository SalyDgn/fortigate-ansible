---
# tasks file for vpn_site_to_site
- set_fact: vpn="{{vpn_fortigate1}}"
  when:
    - inventory_hostname == fortigate1
    - vpn_fortigate1 is defined

- set_fact: vpn="{{vpn_fortigate2}}"
  when:
    - inventory_hostname == fortigate2
    - vpn_fortigate2 is defined

- name: VPN PHASE1
  tags: vpn1
  fortios_vpn_ipsec_phase1_interface:
    vdom: "{{ item.value.vdom }}"
    state: "present"
    vpn_ipsec_phase1_interface:
      name: "P1vpn-to-{{item.value.subnets.site_remote}}"
      interface: "port1"
      peertype: "any"
      proposal: "{{item.value.proposal}}"
      dpd_retryinterval: "5"
      dhgrp: "{{item.value.dh}}"
      psksecret: "{{item.value.pskey}}"
      remote_gw: "{{item.value.peerIP}}"
  with_dict: "{{vpn}}"
  register: result

- set_fact: hostname="{{vpn.site.host}}"
    vdom="{{vpn.site.vdom}}"
    proposal="{{vpn.site.proposal}}"
    phase2keylifetime="{{vpn.site.phase2keylifetime}}"
    site_local_name="{{vpn.site.subnets.site_local}}"
    site_remote_name="{{vpn.site.subnets.site_remote}}"
    sas="{{vpn.site.subnets.sas}}"
    outbound_policy_id="{{ vpn.site.outbound_policy_id }}"
    inbound_policy_id="{{vpn.site.inbound_policy_id}}"
    seq_num_route_static="{{vpn.site.seq_num_route_static}}"
  tags: route,vpn_status

- name: VPN PHASE2
  tags: vpn1
  fortios_vpn_ipsec_phase2_interface:
    vdom: "{{ vdom }}"
    state: "present"
    vpn_ipsec_phase2_interface:
      name: "P2vpn-to-{{site_remote_name}}-{{item.name}}"
      phase1name: "P1vpn-to-{{site_remote_name}}"
      proposal: "{{ proposal }}"
      replay: "enable"
      pfs: "enable"
      auto_negotiate: "enable"
      keylifeseconds: "{{phase2keylifetime }}"
      src_subnet: "{{item.local}}"
      dst_subnet: "{{item.remote}}"
  with_items: "{{sas}}"

- name: firewall address local
  tags: firewall_addr
  fortios_firewall_address:
    vdom: "{{ vdom }}"
    state: "present"
    firewall_address:
      name: "{{site_local_name}}-{{item.name}}"
      subnet: "{{item.local}}"
  with_items: "{{sas}}"

- name: firewall address remote
  tags: firewall_addr
  fortios_firewall_address:
    vdom: "{{ vdom }}"
    state: "present"
    firewall_address:
      name: "{{site_remote_name}}-{{item.name}}"
      subnet: "{{item.remote}}"
  with_items: "{{sas}}"

- name: fetch all policies
  fortinet.fortios.fortios_configuration_fact:
    sorters: policyid
    formatters: policyid
    selector: firewall_policy
  register: policies

- set_fact:
    outbound_policy_id="{{policies.meta.results[-1].policyid | int + 1}}"
    inbound_policy_id="{{policies.meta.results[-1].policyid | int + 2}}"
  when: policies.meta.results[-1].policyid is defined

- set_fact: outbound_policy_id=1
    inbound_policy_id=2
  when: policies.meta.results[-1].policyid is undefined

- name: filter the policy name
  fortinet.fortios.fortios_configuration_fact:
    vdom: "root"
    filters:
      - name=="outbound-{{site_local_name}}-to-{{site_remote_name}}"
    selector: "firewall_policy"
  register: policy

- name: Fail
  ansible.builtin.fail:
    msg: Outbound policy name already exists.
  when: policy.meta.results[0] is defined

- name: firewall policy outbound
  tags: firewall_out
  fortios_firewall_policy:
    vdom: "{{ vdom }}"
    state: "present"
    firewall_policy:
      name: outbound-{{site_local_name}}-to-{{site_remote_name}}
      policyid: "{{ outbound_policy_id }}"
      srcintf:
        - name: "port2"
      dstintf:
        - name: "P1vpn-to-{{site_remote_name}}"
      dstaddr:
        - name: "{{site_remote_name}}-{{item.name}}"
      srcaddr:
        - name: "{{site_local_name}}-{{item.name}}"
      schedule: "always"
      action: "accept"
      service:
        - name: "PING"
        - name: "SSH"
  with_items: "{{sas}}"

- name: filter the policy name
  fortinet.fortios.fortios_configuration_fact:
    vdom: "root"
    filters:
      - name=="inbound-{{site_remote_name}}-to-{{site_local_name}}"
    selector: "firewall_policy"
  register: policy

- name: Fail
  ansible.builtin.fail:
    msg: Inbound policy name already exists.
  when: policy.meta.results[0] is defined

- name: firewall policy inbound
  tags: firewall_in
  fortios_firewall_policy:
    vdom: "{{ vdom }}"
    state: "present"
    firewall_policy:
      name: inbound-{{site_remote_name}}-to-{{site_local_name}}
      policyid: "{{inbound_policy_id}}"
      srcintf:
        - name: "P1vpn-to-{{site_remote_name}}"
      dstintf:
        - name: "port2"
      dstaddr:
        - name: "{{site_local_name}}-{{item.name}}"
      srcaddr:
        - name: "{{site_remote_name}}-{{item.name}}"
      schedule: "always"
      action: "accept"
      service:
        - name: "PING"
        - name: "SSH"
  with_items: "{{sas}}"

- name: route through vpn tunnel
  tags: route
  ignore_errors: true
  fortios_router_static:
    vdom: "{{ vdom }}"
    state: "present"
    router_static:
      dst: "{{item.remote}}"
      device: "P1vpn-to-{{site_remote_name}}"
      seq_num: "{{seq_num_route_static}}"
  with_items: "{{sas}}"
