---
# tasks file for config-policy

# Create a schedule
- name: Onetime schedule configuration.
  fortios_firewall_schedule_onetime:
    vdom: "root"
    state: "present"
    firewall_schedule_onetime:
      name: "{{schedule_name}}"
      start: "{{start_date}}"
      end: "{{end_date}}"
      expiration_days: "{{ expiration_days }}"
  when: create_new_schedule is true

- set_fact: schedule="{{schedule_name}}"
  when: create_new_schedule is true

# Create an address
- name: Configure IPv4 addresses.
  fortios_firewall_address:
    vdom: "root"
    state: "present"
    firewall_address:
      name: "{{ item.address_name }}"
      subnet: "{{ item.address_subnet}}"
      interface: "{{ item.address_interface }}"
  with_items: "{{ addresses }}"
  when: create_new_address is true

  #Search Id
- name: fetch all policies
  fortinet.fortios.fortios_configuration_fact:
    sorters: policyid
    formatters: policyid
    selector: firewall_policy
  register: policies

- set_fact: policyid="{{policies.meta.results[-1].policyid | int + 1}}"
  when: policies.meta.results[-1].policyid is defined

- set_fact: policyid=1
  when: policies.meta.results[-1].policyid is undefined

- name: filter the policy name
  fortinet.fortios.fortios_configuration_fact:
    vdom: "root"
    filters:
      - name=="{{policy_name}}"
    selector: "firewall_policy"
  register: policy

- name: Fail
  ansible.builtin.fail:
    msg: Policy name already exists.
  when: policy.meta.results[0] is defined

- name: "{{ policy_name }}"
  fortios_firewall_policy:
    vdom: root
    state: present
    firewall_policy:
      name: "{{ policy_name }}"
      action: accept
      dstaddr: "{{ destinations_address }}"
      dstintf: "{{ destinations_interface }}"
      logtraffic: utm
      nat: enable
      policyid: "{{policyid}}"
      service: "{{ services }}"
      srcaddr: "{{ sources_address }}"
      srcintf: "{{ sources_interface }}"
      schedule: "{{ schedule }}"
      schedule_timeout: "{{ schedule_timeout }}"
      comments: "{{ansible_date_time.epoch}}"
